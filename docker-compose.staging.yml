version: "3.8"

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
    restart: always
    networks:
      - ft_transcendence

  nest:
    build:
      context: ./nest/
      dockerfile: nest.staging.Dockerfile
    container_name: nest
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./nest/:/app/nest
    ports:
      - "3333:3333"
      - "8080:8080"
    depends_on:
      - postgres
    restart: always
    networks:
      - ft_transcendence

  ui:
    build:
      context: ./ui/
      dockerfile: ui.staging.Dockerfile
    container_name: ui
    ports:
      - 3000:3000
    volumes:
      - ./ui/:/app
      - "/app/node_modules"
    restart: always
    networks:
      - ft_transcendence
    depends_on:
      - nest

  nginx:
    build: ./reverse_proxy/
    container_name: reverse_proxy
    ports:
      - 8000:8000
    volumes:
      - ./ui/:/usr/share/nginx/html
      - ./reverse_proxy/conf/:/etc/nginx/conf.d
    networks:
      - ft_transcendence
    depends_on:
      - ui

networks:
  ft_transcendence:
    name: ft_transcendence
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"

volumes:
  postgres:
